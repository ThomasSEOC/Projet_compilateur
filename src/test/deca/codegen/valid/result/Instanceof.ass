; Main program
; ###############################################################
; VTABLE INIT
; init vtable for default object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; init vtable for A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD Code.A.action, R0
	STORE R0, 5(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
; ###############################################################
; ###############################################################
; start main program
	TSTO #7
	BOV stack_overflow_error
	ADDSP #7
; create instance of class A
	NEW #2, R0
	BOV heap_overflow_error
	PUSH R0
	BSR Code.A.Init
	POP R2
	STORE R2, 6(GB)
; Beginning of main instructions:
	ADDSP #2
	LOAD 6(LB), R0
	CMP #null, R0
	BEQ dereferencement_null_error
	STORE R0, 0(SP)
	LEA 3(GB), R0
	STORE R0, -1(SP)
	BSR Code.InstanceOf
	SUBSP #2
	CMP #0, R0
	BEQ if_1_else
if_1_then:
	WSTR "ok"
	WNL
	BRA if_1_end	; jump to end of if statement
if_1_else:
if_1_end:
	HALT
; ###############################################################
; METHODS
; Code for methods of Object :
; structure init
Code.Object.Init:
	LOAD -2(LB), R1
	LEA 1(GB), R0
	STORE R0, 0(R1)
	RTS
; equals method
code.Object.equals:
	LOAD -2(LB), R0
	CMP -3(LB), R0
	SEQ R0
	RTS
; Code for methods of A
; Code for init of A
Code.A.Init:
	TSTO #8
	BOV stack_overflow_error
	ADDSP #7
; context save
	PUSH R2	; save R2
	TSTO #8
	BOV stack_overflow_error
	ADDSP #7
; context save
	PUSH R2	; save R2
; store VTable pointer
	LOAD -2(LB), R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
; init A.e
	LOAD #0, R0
	STORE R0, 1(R2)
; context restore
	POP R2	; restore R2
	RTS
Code.A.action:
; action
	LOAD -2(LB), R0
	CMP #null, R0
	BEQ dereferencement_null_error
	LOAD 1(R0), R2
	ADD #1, R2	; Plus
	LOAD -2(LB), R0
	CMP #null, R0
	BEQ dereferencement_null_error
	STORE R2, 1(R0)
; context restore
	POP R2	; restore R2
	RTS
Code.InstanceOf:
	LOAD -2(LB), R1
	LOAD -3(LB), R0
InstanceOf_start:
	LOAD 0(R1), R1
	CMP R0, R1
	BEQ InstanceOf_sucess
	CMP #null, R1
	BEQ InstanceOf_failure
	BRA InstanceOf_start
InstanceOf_sucess:
	LOAD #1, R0
	RTS
InstanceOf_failure:
	LOAD #0, R0
	RTS
; ###############################################################
; ERRORS
stack_overflow_error:
	WSTR "Erreur : d√©passement de pile"
	WNL
	ERROR
dereferencement_null_error:
	WSTR "Erreur : dereferencement de null"
	WNL
	ERROR
heap_overflow_error:
	WSTR "Erreur : le tas est plein"
	WNL
	ERROR
; end main program
