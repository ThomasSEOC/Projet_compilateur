DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:54) - verify listClassBody: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:59) - verify listClassBody: end
`> [1, 0] Program
   +> ListDeclClass [List with 1 elements]
   |  []> [1, 0] DeclClass
   |      +> [1, 6] Identifier (A)
   |      |  definition: type defined at [1, 0], type=A
   |      +> Identifier (Object)
   |      |  definition: type(builtin), type=Object
   |      +> ListDeclMethod [List with 1 elements]
   |      |  []> [3, 4] DeclMethod
   |      |      +> [3, 4] Identifier (int)
   |      |      |  definition: type(builtin), type=int
   |      |      +> [3, 8] Identifier (getX)
   |      |      |  definition: method defined at [3, 4], type=int
   |      |      +> ListDeclParam [List with 0 elements]
   |      |      `> [3, 15] MethodBody
   |      |         +> ListDeclVar [List with 0 elements]
   |      |         `> [4, 8] ListInst [List with 1 elements]
   |      |            []> [4, 15] Return
   |      |                `> [4, 15] Identifier (x)
   |      |                   definition: field defined at [2, 18], type=int
   |      `> [2, 18] ListDeclField [List with 1 elements]
   |         []> [2, 18] [visibility=PROTECTED] DeclField
   |             +> [2, 14] Identifier (int)
   |             |  definition: type(builtin), type=int
   |             +> [2, 18] Identifier (x)
   |             |  definition: field defined at [2, 18], type=int
   |             `> NoInitialization
   `> [9, 0] Main
      +> ListDeclVar [List with 1 elements]
      |  []> [10, 6] DeclVar
      |      +> [10, 4] Identifier (A)
      |      |  definition: type defined at [1, 0], type=A
      |      +> [10, 6] Identifier (a)
      |      |  definition: variable defined at [10, 6], type=A
      |      `> [10, 6] Initialization
      |         `> [10, 10] New
      |            type: A
      |            `> [10, 14] Identifier (A)
      |               definition: type defined at [1, 0], type=A
      `> [12, 4] ListInst [List with 1 elements]
         []> [12, 4] Println
             `> ListExpr [List with 2 elements]
                []> [12, 12] StringLiteral ("a.getX() = ")
                ||  type: string
                []> [12, 27] MethodCall
                    type: int
                    +> [12, 27] Identifier (a)
                    |  definition: variable defined at [10, 6], type=A
                    +> [12, 29] Identifier (getX)
                    |  definition: method defined at [3, 4], type=int
                    `> ListExpr [List with 0 elements]
